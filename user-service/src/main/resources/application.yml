server:
  port: 8081
  error:
    include-message: always

management:
  health:
    probes:
      enabled: true
    diskspace:
      enabled: true
  livenessState:
    enabled: true
  readinessState:
    enabled: true
  server:
    port: 8081
  endpoint:
    health:
      show-details: always
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: health, info

eureka:
  service-url:
    defaultZone: http://localhost:8761/eureka/

spring:
  application:
    name: user-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://accounts.google.com
          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
      client:
        registration:
          google:
            client-id:
            client-secret:
            redirect-uri: https://example.com/
            #redirect-uri: http://localhost:8081/login/oauth2/code/google
            scope: openid, profile, email
  datasource:
    url: jdbc:postgresql://localhost:5432/user_db
    username:
    password:
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect  
  flyway:
    locations: classpath:db/migration
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    enabled: true
    baseline-on-migrate: true
    group: true
    sql-migration-prefix: V
    sql-migration-separator: _
    sql-migration-suffixes: .sql
    out-of-order: true